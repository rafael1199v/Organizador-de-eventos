{"ast":null,"code":"import { NavigationEnd } from '@angular/router';\nimport { filter } from 'rxjs/operators';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/router\";\nimport * as i2 from \"@angular/common\";\nimport * as i3 from \"./nav-menu/nav-menu.component\";\nfunction AppComponent_ng_container_1_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementContainerStart(0);\n    i0.ɵɵelement(1, \"app-nav-menu\");\n    i0.ɵɵelementContainerEnd();\n  }\n}\nexport class AppComponent {\n  constructor(router) {\n    this.router = router;\n    this.title = 'app';\n    this.showNavbar = true;\n  }\n  ngOnInit() {\n    this.router.events.pipe(filter(event => event instanceof NavigationEnd)).subscribe(event => {\n      const url = event.urlAfterRedirects;\n      this.showNavbar = this.shouldShowNavbar(url);\n    });\n  }\n  shouldShowNavbar(url) {\n    // Define las rutas donde NO quieres mostrar el navbar\n    const noNavbarRoutes = ['/login', '/register'];\n    return !noNavbarRoutes.includes(url);\n  }\n}\nAppComponent.ɵfac = function AppComponent_Factory(t) {\n  return new (t || AppComponent)(i0.ɵɵdirectiveInject(i1.Router));\n};\nAppComponent.ɵcmp = /*@__PURE__*/i0.ɵɵdefineComponent({\n  type: AppComponent,\n  selectors: [[\"app-root\"]],\n  decls: 4,\n  vars: 1,\n  consts: [[4, \"ngIf\"], [1, \"container\"]],\n  template: function AppComponent_Template(rf, ctx) {\n    if (rf & 1) {\n      i0.ɵɵelementStart(0, \"body\");\n      i0.ɵɵtemplate(1, AppComponent_ng_container_1_Template, 2, 0, \"ng-container\", 0);\n      i0.ɵɵelementStart(2, \"main\", 1);\n      i0.ɵɵelement(3, \"router-outlet\");\n      i0.ɵɵelementEnd()();\n    }\n    if (rf & 2) {\n      i0.ɵɵadvance(1);\n      i0.ɵɵproperty(\"ngIf\", ctx.showNavbar);\n    }\n  },\n  dependencies: [i2.NgIf, i1.RouterOutlet, i3.NavMenuComponent],\n  encapsulation: 2\n});","map":{"version":3,"mappings":"AACA,SAAiBA,aAAa,QAAe,iBAAiB;AAC9D,SAASC,MAAM,QAAQ,gBAAgB;;;;;;;ICDrCC,6BAAiC;IAC/BA,+BAA6B;IAC/BA,0BAAe;;;ADKjB,OAAM,MAAOC,YAAY;EAIvBC,YAAoBC,MAAc;IAAd,WAAM,GAANA,MAAM;IAH1B,UAAK,GAAG,KAAK;IACb,eAAU,GAAG,IAAI;EAEoB;EAErCC,QAAQ;IACN,IAAI,CAACD,MAAM,CAACE,MAAM,CACfC,IAAI,CACHP,MAAM,CAAEQ,KAAY,IAA6BA,KAAK,YAAYT,aAAa,CAAC,CACjF,CACAU,SAAS,CAAED,KAAoB,IAAI;MAClC,MAAME,GAAG,GAAGF,KAAK,CAACG,iBAAiB;MACnC,IAAI,CAACC,UAAU,GAAG,IAAI,CAACC,gBAAgB,CAACH,GAAG,CAAC;IAC9C,CAAC,CAAC;EACN;EAEAG,gBAAgB,CAACH,GAAW;IAC1B;IACA,MAAMI,cAAc,GAAG,CAAC,QAAQ,EAAE,WAAW,CAAC;IAC9C,OAAO,CAACA,cAAc,CAACC,QAAQ,CAACL,GAAG,CAAC;EACtC;;AArBWR,YAAY;mBAAZA,YAAY;AAAA;AAAZA,YAAY;QAAZA,YAAY;EAAAc;EAAAC;EAAAC;EAAAC;EAAAC;IAAA;MCRzBnB,4BAAM;MACJA,+EAEe;MACfA,+BAAwB;MACtBA,gCAA+B;MACjCA,iBAAO;;;MALQA,eAAgB;MAAhBA,qCAAgB","names":["NavigationEnd","filter","i0","AppComponent","constructor","router","ngOnInit","events","pipe","event","subscribe","url","urlAfterRedirects","showNavbar","shouldShowNavbar","noNavbarRoutes","includes","selectors","decls","vars","consts","template"],"sourceRoot":"","sources":["C:\\Users\\Matías\\Desktop\\Program 2\\Proyecto Program\\Organizador-de-eventos\\OrganizadorEventos\\ClientApp\\src\\app\\app.component.ts","C:\\Users\\Matías\\Desktop\\Program 2\\Proyecto Program\\Organizador-de-eventos\\OrganizadorEventos\\ClientApp\\src\\app\\app.component.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\r\nimport { Router, NavigationEnd, Event } from '@angular/router';\r\nimport { filter } from 'rxjs/operators';\r\n\r\n@Component({\r\n  selector: 'app-root',\r\n  templateUrl: './app.component.html',\r\n})\r\nexport class AppComponent implements OnInit {\r\n  title = 'app';\r\n  showNavbar = true;\r\n\r\n  constructor(private router: Router) {}\r\n\r\n  ngOnInit(): void {\r\n    this.router.events\r\n      .pipe(\r\n        filter((event: Event): event is NavigationEnd => event instanceof NavigationEnd)\r\n      )\r\n      .subscribe((event: NavigationEnd) => {\r\n        const url = event.urlAfterRedirects;\r\n        this.showNavbar = this.shouldShowNavbar(url);\r\n      });\r\n  }\r\n\r\n  shouldShowNavbar(url: string): boolean {\r\n    // Define las rutas donde NO quieres mostrar el navbar\r\n    const noNavbarRoutes = ['/login', '/register'];\r\n    return !noNavbarRoutes.includes(url);\r\n  }\r\n}\r\n","<body>\r\n  <ng-container *ngIf=\"showNavbar\">\r\n    <app-nav-menu></app-nav-menu>\r\n  </ng-container>\r\n  <main class=\"container\">\r\n    <router-outlet></router-outlet>\r\n  </main>\r\n</body>\r\n"]},"metadata":{},"sourceType":"module","externalDependencies":[]}